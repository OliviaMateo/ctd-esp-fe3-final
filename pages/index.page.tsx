import { useEffect, useState } from "react";
import type {NextPage, GetServerSideProps} from 'next'
import Head from 'next/head'
import { useRouter } from "next/router";
import BodySingle from "components/layouts/body/single/body-single";
import { Comic } from "interfaces/types"
import { getComics } from "services/marvel/marvel.service";
import ComicPagination from 'components/pagination/pagination';
import ComicGrid from 'components/comicGrid/comicGrid';
import LayoutGeneral from "components/layouts/layout-general";

interface Props {
  comics: Comic[];
  total: number;
}

const Index: NextPage<Props> = ({ comics, total }) => {
  const PER_PAGE = 12;
  const [page, setPage] = useState(1);
  const router = useRouter()

  const handleChange = (pageNum: number) => {
    setPage(pageNum);
  };

  useEffect(() => {
    router.query.page = String(page)
    router.push(router)
  }, [page]);

  return (
    <LayoutGeneral>
      <Head>
        <title>DH Marvel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <BodySingle title={"Comics"}>
        <ComicPagination
          page={page}
          total={Math.ceil(total / PER_PAGE)}
          setPage={handleChange}
        />
        <ComicGrid comics={comics} />
        <ComicPagination
          page={page}
          total={Math.ceil(total / PER_PAGE)}
          setPage={handleChange}
        />
      </BodySingle>
    </LayoutGeneral>
  );
};

export const getServerSideProps: GetServerSideProps = async({query}) => {
  const PER_PAGE = 12;
  const page = Number(query?.page) || 1
  
  const { data } = await getComics((page-1)*PER_PAGE,PER_PAGE);

  return {
    props: {
      comics: data.results,
      total: data.total,
    },
  };
}

export default Index;